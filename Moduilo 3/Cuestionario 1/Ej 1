Casilla llenarCasilla(){
    Casilla aux;
    aux.esBlanca=true;
    aux.estaIluminada=false;
    aux.esAmpolleta=false;
    aux.valorCasilla=0;
    return aux;
}

void reservarMemoriaMatriz(Casilla ***matriz,int tamano){
    *matriz= (Casilla **) malloc(tamano * sizeof(Casilla *));
    if(matriz==NULL) exit(EXIT_FAILURE);
    for(int i=0;i<tamano;i++){
        (*matriz)[i]=(Casilla *) malloc(tamano * sizeof(Casilla));
        if((*matriz)[i]==NULL) exit(EXIT_FAILURE);
    }
}

Casilla ** crearMatriz(int tamano){
    Casilla **matriz=NULL;
    reservarMemoriaMatriz(&matriz,tamano);
    for(int i=0;i<tamano;i++){
        for(int j=0;j<tamano;j++){
            matriz[i][j]=llenarCasilla();
        }
    }
    
    return matriz;
}

Casilla ** insertarCasillaNegra(Casilla ** matriz, int posX, int posY, int valorCasilla){
    
    matriz[posX][posY].esBlanca=false;
    matriz[posX][posY].valorCasilla=valorCasilla;
    
    return matriz;
}

void iluminarIzq(Casilla **matriz,int tamano,int posX,int posY){
    if(posY==0) return;
    for(int i=posY-1;i>=0;i--){
        if(!matriz[posX][i].esBlanca) return;
        if(matriz[posX][i].esAmpolleta) return;
        matriz[posX][i].estaIluminada=true;
    }
}

void iluminarDer(Casilla **matriz,int tamano,int posX,int posY){
    if(posY==tamano-1) return;
    for(int i=posY+1;i<tamano;i++){
        if(!matriz[posX][i].esBlanca) return;
        if(matriz[posX][i].esAmpolleta) return;
        matriz[posX][i].estaIluminada=true;
    }
}

void iluminarArri(Casilla **matriz,int tamano,int posX,int posY){
    if(posX==0) return;
    for(int i=posX-1;i>=0;i--){
        if(!matriz[i][posY].esBlanca) return;
        if(matriz[i][posY].esAmpolleta) return;
        matriz[i][posY].estaIluminada=true;
    }
}

void iluminarAba(Casilla **matriz,int tamano,int posX,int posY){
    if(posX==tamano-1) return;
    for(int i=posX+1;i<tamano;i++){
        if(!matriz[i][posY].esBlanca) return;
        if(matriz[i][posY].esAmpolleta) return;
        matriz[i][posY].estaIluminada=true;
    }
}

Casilla ** insertarAmpolleta(Casilla ** matriz, int tamano, int posX, int posY){
    matriz[posX][posY].esAmpolleta=true;
    matriz[posX][posY].esBlanca=false;
    iluminarArri(matriz,tamano,posX,posY);
    iluminarAba(matriz,tamano,posX,posY);
    iluminarIzq(matriz,tamano,posX,posY);
    iluminarDer(matriz,tamano,posX,posY);
    return matriz;
}
